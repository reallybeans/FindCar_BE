// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tim_Xe.Data.Repository;

namespace Tim_Xe.Data.Migrations
{
    [DbContext(typeof(TimXeDBContext))]
    [Migration("20211014134213_TimmXeV1.3")]
    partial class TimmXeV13
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("IdGroup")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehicleType")
                        .HasColumnType("int");

                    b.Property<bool?>("Mode")
                        .HasColumnType("bit");

                    b.Property<string>("NameCustomer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneCustomer")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<double?>("PriceBooking")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TimeWait")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdVehicleType");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.BookingDriver", b =>
                {
                    b.Property<int>("IdBooking")
                        .HasColumnType("int");

                    b.Property<int>("IdDriver")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdBooking", "IdDriver");

                    b.HasIndex("IdDriver");

                    b.ToTable("Booking_Driver");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdChannelType")
                        .HasColumnType("int");

                    b.Property<int?>("IdGroup")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdChannelType");

                    b.HasIndex("IdGroup");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.ChannelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ChannelType");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Img")
                        .HasColumnName("img")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardId")
                        .HasColumnName("CardID")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateById")
                        .HasColumnName("CreateByID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Img")
                        .HasColumnName("img")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("IdCity")
                        .HasColumnType("int");

                    b.Property<int>("IdManager")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double?>("PriceCoefficient")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdManager");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("IdBooking")
                        .HasColumnType("int");

                    b.Property<string>("LatLng")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PointTypeValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBooking");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardId")
                        .HasColumnName("CardID")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Img")
                        .HasColumnName("img")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdGroup")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.PriceKm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("IdVehicleType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Km")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicleType");

                    b.ToTable("PriceKm");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.PriceTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdVehicleType")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("TimeWait")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicleType");

                    b.ToTable("PriceTime");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdDriver")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehicleType")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdDriver");

                    b.HasIndex("IdVehicleType");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("NumOfSeat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Booking", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Customer", "IdCustomerNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("FK_Booking_Customer");

                    b.HasOne("Tim_Xe.Data.Repository.Entities.Group", "IdGroupNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_Booking_Group");

                    b.HasOne("Tim_Xe.Data.Repository.Entities.VehicleType", "IdVehicleTypeNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("IdVehicleType")
                        .HasConstraintName("FK_Trip_VehicleType");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.BookingDriver", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Booking", "IdBookingNavigation")
                        .WithMany("BookingDrivers")
                        .HasForeignKey("IdBooking")
                        .HasConstraintName("FK_Booking_Driver_Booking")
                        .IsRequired();

                    b.HasOne("Tim_Xe.Data.Repository.Entities.Driver", "IdDriverNavigation")
                        .WithMany("BookingDrivers")
                        .HasForeignKey("IdDriver")
                        .HasConstraintName("FK_Booking_Driver_Driver")
                        .IsRequired();
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Channel", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.ChannelType", "IdChannelTypeNavigation")
                        .WithMany("Channels")
                        .HasForeignKey("IdChannelType")
                        .HasConstraintName("FK_Channel_ChannelType");

                    b.HasOne("Tim_Xe.Data.Repository.Entities.Group", "IdGroupNavigation")
                        .WithMany("Channels")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_Channel_Group");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Driver", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Manager", "CreateBy")
                        .WithMany("Drivers")
                        .HasForeignKey("CreateById")
                        .HasConstraintName("FK_Driver_Manager");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Group", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.City", "IdCityNavigation")
                        .WithMany("Groups")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("FK_Group_City");

                    b.HasOne("Tim_Xe.Data.Repository.Entities.Manager", "IdManagerNavigation")
                        .WithMany("Groups")
                        .HasForeignKey("IdManager")
                        .HasConstraintName("FK_Group_Manager")
                        .IsRequired();
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Location", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Booking", "IdBookingNavigation")
                        .WithMany("Locations")
                        .HasForeignKey("IdBooking")
                        .HasConstraintName("FK_Point_Trip");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Manager", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Role", "Role")
                        .WithMany("Managers")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Acount_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.News", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Group", "IdGroupNavigation")
                        .WithMany("News")
                        .HasForeignKey("IdGroup")
                        .HasConstraintName("FK_News_Group");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.PriceKm", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.VehicleType", "IdVehicleTypeNavigation")
                        .WithMany("PriceKms")
                        .HasForeignKey("IdVehicleType")
                        .HasConstraintName("FK_PriceKm_VehicleType");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.PriceTime", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.VehicleType", "IdVehicleTypeNavigation")
                        .WithMany("PriceTimes")
                        .HasForeignKey("IdVehicleType")
                        .HasConstraintName("FK_PriceTime_VehicleType");
                });

            modelBuilder.Entity("Tim_Xe.Data.Repository.Entities.Vehicle", b =>
                {
                    b.HasOne("Tim_Xe.Data.Repository.Entities.Driver", "IdDriverNavigation")
                        .WithMany("Vehicles")
                        .HasForeignKey("IdDriver")
                        .HasConstraintName("FK_Vehicle_Driver");

                    b.HasOne("Tim_Xe.Data.Repository.Entities.VehicleType", "IdVehicleTypeNavigation")
                        .WithMany("Vehicles")
                        .HasForeignKey("IdVehicleType")
                        .HasConstraintName("FK_Vehicle_VehicleType");
                });
#pragma warning restore 612, 618
        }
    }
}
